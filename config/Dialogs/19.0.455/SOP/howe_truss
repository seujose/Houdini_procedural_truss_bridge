// Magic: f197565
// Automatically generated PSI dialog (PSI version 19.0.455)
// Mon Jan  3 08:31:29 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui

height.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 height.label = PARM_LABEL("height", "height") WIDTH(1.5);
 PARM(float, 1, "height", none, none) RANGE(0,10)
	 LABELREF(height.label) HSTRETCH;

  { WIDTH(0.1) }
}

seed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 seed.label = PARM_LABEL("seed", "seed") WIDTH(1.5);
 PARM(float, 1, "seed", none, none) RANGE(0,10)
	 LABELREF(seed.label) HSTRETCH;

  { WIDTH(0.1) }
}

plankOffset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 plankOffset.label = PARM_LABEL("plankOffset", "plankOffset") WIDTH(1.5);
 PARM(float, 1, "plankOffset", none, none) RANGE(0.5,2)
	 LABELREF(plankOffset.label) HSTRETCH;

  { WIDTH(0.1) }
}

step.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 step.label = PARM_LABEL("step", "step") WIDTH(1.5);
 PARM(float, 1, "step", none, none) RANGE(0,10)
	 LABELREF(step.label) HSTRETCH;

  { WIDTH(0.1) }
}

endsOffset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 endsOffset.label = PARM_LABEL("endsOffset", "endsOffset") WIDTH(1.5);
 PARM(float, 1, "endsOffset", none, none) RANGE(0,10)
	 LABELREF(endsOffset.label) HSTRETCH;

  { WIDTH(0.1) }
}

supportOffset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 supportOffset.label = PARM_LABEL("supportOffset", "supportOffset") WIDTH(1.5);
 PARM(float, 1, "supportOffset", none, none) RANGE(0.10000000000000001,0.29999999999999999)
	 LABELREF(supportOffset.label) HSTRETCH;

  { WIDTH(0.1) }
}

Width.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 Width.label = PARM_LABEL("Width", "Width") WIDTH(1.5);
 PARM(float, 1, "Width", none, none) RANGE(0,10)
	 LABELREF(Width.label) HSTRETCH;

  { WIDTH(0.1) }
}

defaultMesh.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 defaultMesh.label = PARM_LABEL("defaultMesh", "defaultMesh") WIDTH(1.5);
 PARM(integer, 1, "defaultMesh", none, none) RANGE(0,1)
	 LABELREF(defaultMesh.label) HSTRETCH;

  { WIDTH(0.1) }
}

meshLevel2.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   meshLevel2.label = PARM_LABEL("meshLevel2", "meshLevel2") WIDTH(1.5);
   PARM(float, 3, "meshLevel2", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(meshLevel2.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

meshLevel3.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   meshLevel3.label = PARM_LABEL("meshLevel3", "meshLevel3") WIDTH(1.5);
   PARM(float, 3, "meshLevel3", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(meshLevel3.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

meshPath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 meshPath.label = PARM_LABEL("meshPath", "meshPath") WIDTH(1.5);
 PARM_FIELD(pathstring, "meshPath") VALUE(meshPath.val) 
	LABELREF(meshPath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(meshPath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(meshPath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

curvePath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 curvePath.label = PARM_LABEL("curvePath", "curvePath") WIDTH(1.5);
 PARM_FIELD(pathstring, "curvePath") VALUE(curvePath.val) 
	LABELREF(curvePath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(curvePath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(curvePath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

dist.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dist.label = PARM_LABEL("Length", "dist") WIDTH(1.5);
 PARM(float, 1, "dist", none, none) RANGE(0,10)
	 LABELREF(dist.label) HSTRETCH;

  { WIDTH(0.1) }
}

points.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 points.label = PARM_LABEL("Points", "points") WIDTH(1.5);
 PARM(integer, 1, "points", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(points.label) HSTRETCH;

  { WIDTH(0.1) }
}

dist2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dist2.label = PARM_LABEL("Length", "dist2") WIDTH(1.5);
 PARM(float, 1, "dist2", none, none) RANGE(0,10)
	 LABELREF(dist2.label) HSTRETCH;

  { WIDTH(0.1) }
}

points2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 points2.label = PARM_LABEL("Points", "points2") WIDTH(1.5);
 PARM(integer, 1, "points2", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(points2.label) HSTRETCH;

  { WIDTH(0.1) }
}

base_mesh.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   base_mesh.label = PARM_LABEL("base_mesh", "base_mesh") WIDTH(1.5);
   PARM(float, 3, "base_mesh", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(base_mesh.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

uniform.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("uniform", "uniform") toggle VALUE(uniform.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

deleteEnds.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deleteEnds", "deleteEnds") toggle VALUE(deleteEnds.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sepparm3.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

points3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 points3.label = PARM_LABEL("Points", "points3") WIDTH(1.5);
 PARM(integer, 1, "points3", none, none) RANGE(2,50)
	LOCK_RANGE_MIN LABELREF(points3.label) HSTRETCH;

  { WIDTH(0.1) }
}

dist3.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dist3.label = PARM_LABEL("Length", "dist3") WIDTH(1.5);
 PARM(float, 1, "dist3", none, none) RANGE(0,10)
	 LABELREF(dist3.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

points4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 points4.label = PARM_LABEL("Points", "points4") WIDTH(1.5);
 PARM(integer, 1, "points4", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(points4.label) HSTRETCH;

  { WIDTH(0.1) }
}

dist4.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dist4.label = PARM_LABEL("Length", "dist4") WIDTH(1.5);
 PARM(float, 1, "dist4", none, none) RANGE(0,10)
	 LABELREF(dist4.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

base_mesh2.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   base_mesh2.label = PARM_LABEL("base_mesh", "base_mesh2") WIDTH(1.5);
   PARM(float, 3, "base_mesh2", none, none, "X,Y,Z")
	RANGE(-1,1)  LABELREF(base_mesh2.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

length2.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 length2.label = PARM_LABEL("Length", "length2") WIDTH(1.5);
 PARM(float, 1, "length2", none, none) RANGE(0,5)
	LOCK_RANGE_MIN LABELREF(length2.label) HSTRETCH;

  { WIDTH(0.1) }
}

points5.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 points5.label = PARM_LABEL("Points", "points5") WIDTH(1.5);
 PARM(integer, 1, "points5", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(points5.label) HSTRETCH;

  { WIDTH(0.1) }
}

dist5.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 dist5.label = PARM_LABEL("Length", "dist5") WIDTH(1.5);
 PARM(float, 1, "dist5", none, none) RANGE(0,10)
	 LABELREF(dist5.label) HSTRETCH;

  { WIDTH(0.1) }
}

base_mesh3.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   base_mesh3.label = PARM_LABEL("base_mesh", "base_mesh3") WIDTH(1.5);
   PARM(float, 2, "base_mesh3", none, none, "X,Y")
	RANGE(-1,1)  LABELREF(base_mesh3.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

meshA1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "meshA1.gad"
    { 
	VALUE(meshA1.gad.val) STRETCH(1,0)

	TAB "meshA1"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    dist.gad;		
	    points.gad;		

	    { STRETCH(1,1) }
	}

	TAB "meshA2"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    dist2.gad;		
	    points2.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

meshA.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "meshA.gad"
    { 
	VALUE(meshA.gad.val) STRETCH(1,0)

	TAB "meshA"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    meshA1.gad;		
	    base_mesh.gad;		

	    { STRETCH(1,1) }
	}

	TAB "meshB"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    uniform.gad;		
	    deleteEnds.gad;		
	    sepparm3.gad;		
	    points3.gad;		
	    dist3.gad;		
	    sepparm.gad;		
	    points4.gad;		
	    dist4.gad;		
	    sepparm2.gad;		
	    base_mesh2.gad;		

	    { STRETCH(1,1) }
	}

	TAB "meshC"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    length2.gad;		
	    points5.gad;		
	    dist5.gad;		
	    base_mesh3.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

mesh2.gad = 
GROUP collapsible "mesh" flat  
{
    VALUE(mesh2.gad.val) LAYOUT(vertical) HSTRETCH
	    meshA.gad;		
} 

baseMesh_path.gad = 
GROUP collapsible "baseMesh_path" flat  
{
    VALUE(baseMesh_path.gad.val) LAYOUT(vertical) HSTRETCH
	    meshPath.gad;		
	    curvePath.gad;		
} 

mesh.gad = 
GROUP collapsible "mesh" flat  
{
    VALUE(mesh.gad.val) LAYOUT(vertical) HSTRETCH
	    meshLevel2.gad;		
	    meshLevel3.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    height.gad; 
    seed.gad; 
    plankOffset.gad; 
    step.gad; 
    endsOffset.gad; 
    supportOffset.gad; 
    Width.gad; 
    defaultMesh.gad; 
    mesh.gad; 
    baseMesh_path.gad; 
    mesh2.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
